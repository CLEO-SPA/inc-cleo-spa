# server/Dockerfile
FROM node:18-alpine AS base

# Set working directory
WORKDIR /usr/src/app/server

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Development dependencies for building TypeScript
FROM base AS build
RUN npm ci
COPY . .
RUN npm run build

# Production stage
FROM base AS production

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodeuser -u 1001

# Copy built application from build stage
COPY --from=build --chown=nodeuser:nodejs /usr/src/app/server/dist ./dist
COPY --from=build --chown=nodeuser:nodejs /usr/src/app/server/package*.json ./

# Switch to non-root user
USER nodeuser

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" || exit 1

# Start the application
CMD ["npm", "start"]